{"version":3,"sources":["router.js","index.js"],"names":["Routed","useState","routes","setRoutes","handleClick","scroll","scrollToTop","useEffect","arr","i","data","length","arr0","depend2","Depends","split","depend3","j","charAt","substring","k","indexOf","splice","l","m","n","object","dependency","path","push","singleObject","id","Package","component","Component","name","description","Description","depends","reversedepends","deps","routeComponents","map","item","key","render","LinkComponents","to","onClick","props","LinkDependencies","Home","className","exact","ReactDOM","document","getElementById"],"mappings":"yPAmLeA,EA1KA,WAAO,IAAD,EAESC,mBAAS,IAFlB,mBAEZC,EAFY,KAEJC,EAFI,KAcbC,EAAc,WANlBC,gBAAOC,eAaTC,qBAAU,WAQR,IAHA,IAAMC,EAAM,GAGJC,EAAI,EAAGA,EAAIC,EAAKC,OAAQF,IAAI,CAyBlC,IApBA,IAAMG,EAAO,GAiBTC,GAXCH,EAAKD,GAAGK,QACFJ,EAAKD,GAAGK,QAGR,IAOWC,MAAM,KACxBC,EAAU,GAENC,EAAI,EAAGA,EAAIJ,EAAQF,OAAQM,IACe,MAA7CJ,EAAQI,GAAGC,OAAOL,EAAQI,GAAGN,OAAS,KACvCE,EAAQI,GAAKJ,EAAQI,GAAGE,UAAU,EAAGN,EAAQI,GAAGN,OAAS,IAI7D,IAAI,IAAIS,EAAI,EAAGA,EAAIP,EAAQF,OAAQS,KACD,IAA7BP,EAAQO,GAAGC,QAAQ,MACpBR,EAAQS,OAAOF,EAAG,GAItB,IAAI,IAAIG,EAAI,EAAGA,EAAIV,EAAQF,OAAQY,KACD,IAA7BV,EAAQU,GAAGF,QAAQ,MACpBR,EAAQS,OAAOC,EAAG,GAItB,IAAI,IAAIC,EAAI,EAAGA,EAAIX,EAAQF,OAAQa,KACD,IAA7BX,EAAQW,GAAGH,QAAQ,MACpBR,EAAQS,OAAOE,EAAG,GAItB,IAAI,IAAIC,EAAI,EAAGA,EAAIZ,EAAQF,OAAQc,IAAI,CACrCT,EAAUA,EAAU,SAAWH,EAAQY,GACvC,IAAIC,EAAS,CACXC,WAAYd,EAAQY,GACpBG,KAAK,IAAD,OAAMf,EAAQY,KAEpBb,EAAKiB,KAAKH,GAMZ,IAAII,EAAe,CACjBC,GAAItB,EACJmB,KAAK,IAAD,OAAMlB,EAAKD,GAAGuB,SAClBC,UAAWC,EACXC,KAAK,GAAD,OAAKzB,EAAKD,GAAGuB,SACjBI,YAAY,GAAD,OAAK1B,EAAKD,GAAG4B,aACxBC,QAAStB,EACTuB,eAAgB,OAChBC,KAAM5B,GAERJ,EAAIqB,KAAKC,GAEX3B,EAAUK,KACT,IAKH,IAAMiC,EAAkBvC,EAAOwC,KAAI,SAAAC,GAAI,OAAI,kBAAC,IAAD,CAAOf,KAAMe,EAAKf,KAAMgB,IAAKD,EAAKZ,GAAIc,OAAQ,kBAAM,kBAACX,EAAD,CAAWC,KAAMQ,EAAKR,KAAMC,YAAaO,EAAKP,YAAaE,QAASK,EAAKL,QAASE,KAAMG,EAAKH,aAKtLM,EAAiB5C,EAAOwC,KAAI,SAAAC,GAAI,OAAI,4BAAI,kBAAC,IAAD,CAAMI,GAAIJ,EAAKf,KAAMoB,QAAS5C,EAAa2B,GAAIY,EAAKZ,GAAIa,IAAKD,EAAKZ,IAAKY,EAAKR,UAKpHD,EAAY,SAACe,GACjB,IAAMC,EAAmBD,EAAMT,KAAKE,KAAI,SAAAC,GAAI,OAAI,4BAAI,kBAAC,IAAD,CAAMI,GAAIJ,EAAKf,KAAMoB,QAAS5C,GAAcuC,EAAKhB,gBACrG,OACE,oCACE,6BACE,4BAAKsB,EAAMd,OAEb,6BACE,4CACCc,EAAMb,aAET,6BACE,6CACCc,GAEH,6BACE,wDASFC,EAAO,WACX,OACE,oCACE,kDAQN,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,UACb,kBAAC,IAAD,CAAML,GAAG,KAAT,QACCD,GAEH,yBAAKM,UAAU,cACb,kBAAC,IAAD,CAAOC,OAAK,EAACzB,KAAK,IAAIiB,OAAQ,kBAAM,kBAACM,EAAD,SACnCV,MCxKXa,IAAST,OACP,kBAAC,EAAD,MACAU,SAASC,eAAe,U","file":"static/js/main.dc705b20.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route, Link\r\n} from 'react-router-dom'\r\nimport data from './status/data'\r\nimport './index.css'\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst Routed = () => {\r\n\r\n  const [routes, setRoutes] = useState([])\r\n\r\n  /**\r\n   * Function for scrolling to top when link is clicked\r\n   */\r\n  const scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  /**\r\n   * Function for clicking link\r\n   */\r\n  const handleClick = () => {\r\n    scrollToTop()\r\n  }\r\n\r\n  /**\r\n   * Before the component renders, all the data is modified\r\n   */\r\n  useEffect(() => {\r\n\r\n    /**\r\n     * An empty array to be filled with objects that contain data about packages\r\n     */\r\n    const arr = []\r\n    \r\n\r\n    for(let i = 0; i < data.length; i++){\r\n      \r\n      /**\r\n       * Array for objects that contain path and package name for dependencies\r\n       */\r\n      const arr0 = []\r\n\r\n      /**\r\n       * Checks if the package has any dependencies\r\n       */\r\n      let depend = \"\"\r\n      if(!!data[i].Depends){\r\n        depend = data[i].Depends\r\n      }\r\n      else{\r\n        depend = \"\"\r\n      }\r\n\r\n      /**\r\n       * Removes version numbers and other characters that are not needed\r\n       */\r\n      let depend1 = depend\r\n      let depend2 = depend1.split(\" \")\r\n      let depend3 = \"\"\r\n\r\n      for(let j = 0; j < depend2.length; j++){\r\n        if(depend2[j].charAt(depend2[j].length - 1) === \",\"){\r\n          depend2[j] = depend2[j].substring(0, depend2[j].length - 1)\r\n        }\r\n      }   \r\n\r\n      for(let k = 0; k < depend2.length; k++){\r\n        if(depend2[k].indexOf(\"(\") !== -1){\r\n          depend2.splice(k, 1)\r\n        }\r\n      }\r\n\r\n      for(let l = 0; l < depend2.length; l++){\r\n        if(depend2[l].indexOf(\")\") !== -1){\r\n          depend2.splice(l, 1)\r\n        }\r\n      }\r\n\r\n      for(let m = 0; m < depend2.length; m++){\r\n        if(depend2[m].indexOf(\"|\") !== -1){\r\n          depend2.splice(m, 1)\r\n        }\r\n      }  \r\n\r\n      for(let n = 0; n < depend2.length; n++){\r\n        depend3 = depend3 + \"______\" + depend2[n]\r\n        let object = {\r\n          dependency: depend2[n],\r\n          path: `/${depend2[n]}`\r\n        }\r\n        arr0.push(object)\r\n      }\r\n\r\n      /**\r\n       * Makes objects with data that is needed\r\n       */\r\n      let singleObject = {\r\n        id: i,\r\n        path: `/${data[i].Package}`,\r\n        component: Component,\r\n        name: `${data[i].Package}`,\r\n        description: `${data[i].Description}`,\r\n        depends: depend3,\r\n        reversedepends: \"okok\",\r\n        deps: arr0\r\n      }\r\n      arr.push(singleObject)\r\n    }\r\n    setRoutes(arr)\r\n  }, [])\r\n\r\n  /**\r\n   * Creates routes for all the packages and defines routes to components\r\n   */\r\n  const routeComponents = routes.map(item => <Route path={item.path} key={item.id} render={() => <Component name={item.name} description={item.description} depends={item.depends} deps={item.deps}/>} />)\r\n\r\n  /**\r\n   * Creates links to all the components\r\n   */\r\n  const LinkComponents = routes.map(item => <li><Link to={item.path} onClick={handleClick} id={item.id} key={item.id}>{item.name}</Link></li>)\r\n  \r\n  /**\r\n   * Returns component that renders information about packages\r\n   */\r\n  const Component = (props) => {\r\n    const LinkDependencies = props.deps.map(item => <li><Link to={item.path} onClick={handleClick}>{item.dependency}</Link></li>)\r\n    return(\r\n      <>\r\n        <div>\r\n          <h1>{props.name}</h1>\r\n        </div>\r\n        <div>\r\n          <h2>description:</h2>\r\n          {props.description}\r\n        </div>\r\n        <div>\r\n          <h2>dependencies:</h2>\r\n          {LinkDependencies}\r\n        </div>\r\n        <div>\r\n          <h2>reverse dependencies:</h2>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Component for the home page\r\n   */\r\n  const Home = () => {\r\n    return(\r\n      <>\r\n        <h1>työttömyys</h1>\r\n      </>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * returns the whole app that is rendered in index.js\r\n   */\r\n  return(\r\n    <Router>\r\n      <div className=\"view\">\r\n        <div className=\"routes\">\r\n          <Link to=\"/\">home</Link>\r\n          {LinkComponents}\r\n        </div>\r\n        <div className=\"components\">\r\n          <Route exact path=\"/\" render={() => <Home/>}/>\r\n          {routeComponents}\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Routed","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Routed from './router.js'\r\n\r\nReactDOM.render(\r\n  <Routed />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}